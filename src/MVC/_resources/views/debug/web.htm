<html class="TINYPHP_DEBUG_HTML">
<head>
<style type="text/css">
.TINYPHP_DEBUG_HTML { margin: 0;text-align: left; }
.TINYPHP_DEBUG_HTML  body { margin: 0;text-align: left}
.TINYPHP_DEBUG_HTML .box p {margin: 0;}
.TINYPHP_DEBUG_HTML .bg_yellow {background: #fcfdd1;}
.TINYPHP_DEBUG_HTML .bg_yellow2 {background: #fcff7f;}
.TINYPHP_DEBUG_HTML .font_red {color: #F00;}
.TINYPHP_DEBUG_HTML .font_pink {color: #ff00ff;}
.TINYPHP_DEBUG_HTML .font_red_d {color: #6a0b0b;}
.TINYPHP_DEBUG_HTML .font_blue {color: #0000ff;}
.TINYPHP_DEBUG_HTML .font_yellow_d {color: #ff7200;}
.TINYPHP_DEBUG_HTML .font_green_d {color: #195011;}
.TINYPHP_DEBUG_HTML .font_green {color: green;}
.TINYPHP_DEBUG_HTML .font_gray {color: #666666;}
.TINYPHP_DEBUG_HTML .font_underline {text-decoration: underline;}
.TINYPHP_DEBUG_HTML .font_bold {font-weight: bold;}
.TINYPHP_DEBUG_HTML .box {border: 1px solid #ffce5a;padding: 10px 20px 30px;line-height: 25px;}
.TINYPHP_DEBUG_HTML .code {background: #FFF;margin-top: 20px;border: 1px solid #215119;font-size: 13px;height: 250px;line-height: 26px;overflow: hidden;}
.TINYPHP_DEBUG_HTML .code p {padding: 3px 10px;line-height: 26px;}
.TINYPHP_DEBUG_HTML .code .line {float: left;background: #EEE;color: #666;border-right: 1px solid #ccc;padding: 3px;font-size: 13px;line-height: 26px;margin-right: 10px;}
.TINYPHP_DEBUG_HTML .code .line p {padding: 3px 8px;line-height: 26px;}
.TINYPHP_DEBUG_HTML .flex_menu {margin-top: 10px;float: left;width: 100%;border: 1px solid #AAA;border-top: none;}
.TINYPHP_DEBUG_HTML .flex_menu .jt{cursor: pointer;font-size: 13px;height: 28px;display: block;background: #FFF1C8;border-top: 1px solid #666;border-bottom: 1px solid #e2e2e2;padding: 8px 5px;color: #F00;font-weight: 400;margin: 0px}
.TINYPHP_DEBUG_HTML .flex_menu .jt .jt_down {cursor: pointer;float: right;border: 4px solid #E1FAFF;border-color: #F90 #FFF1C8 #FFF1C8;font-size: 0;line-height: 20px;margin-top: 0px;}
.TINYPHP_DEBUG_HTML .flex_menu .jt .jt_up {cursor: pointer;float: right;border: 4px solid #E1FAFF;border-color: #FFF1C8 #FFF1C8 #F90;font-size: 0;line-height: 0px;margin-top: 0px;}
.TINYPHP_DEBUG_HTML .flex_menu .cont {display: none;border-top: none;background: #FFF;padding: 5px 8px 0px;font: 12px arial;}
.TINYPHP_DEBUG_HTML .flex_menu .cont_selected {}
.TINYPHP_DEBUG_HTML .flex_menu p {height: 22px;padding: 4px;margin: 0px;line-height: 15px;}
#debug_docs{width:100%;height:2000px}
#debug_docs iframe{width:100%;height:100%}
</style>
</head>
<body>
<!-- Exception Start -->
{if $debugFirstException}
<div class="box bg_yellow">
    <h2 class="font_red font_underline">{$debugFirstException['type']}</h2>
    <p>
        <span class="font_red_d ">{$debugFirstException['handler']}: {$debugFirstException['message']}</span>
    </p>
    <p>
        Line:
        <span class="font_red"> {$debugFirstException['line']}</span>
    </p>
    <p>File: {$debugFirstException['file']}</p>
    <p>
        <span class=>Trace: {$debugFirstException['traceString']}</span>
    </p>
<div id ="TINYPHP_DEBUG_CODE" class="code">
    <div class="line">
{loop $debugFirstException['codes'] $code}
<p {if $code[2]}class="font_red_d"{/if}>{$code[0]}</p>
{/loop}
    </div>
    <div>
{loop $debugFirstException['codes'] $code}
        <p {if $code[2]}class="font_red"{/if}>{$code[1]}</p>
{/loop}
    </div>
</div>
{if $debugExceptions}
<br/>
{loop $debugExceptions $de}
<p>{$de['type']}: <br/> &nbsp;&nbsp;&nbsp;&nbsp; {$de['handler']}  {$de['message']} On {$de['file']} Line {$de['line']}</p>
{/loop}
{/if}
</div>
{/if}
<!-- Exception End -->

<div id="debug_FileMent" class="flex_menu">

<!-- EXEC BOX Start -->
<div onclick="__TINYPHP_DEBUG.down('TINYPHP_DEBUG_EXEC_BOX')">
            <h4 class="jt">
                <span style="float: left">Total Time: <span class="font_red_d"> {$debugInterval} </span>second(s), Total Memory: <span class="font_red_d">{$debugMemory}</span> M.
                </span> <span id="TINYPHP_DEBUG_EXEC_BOX_JT" class="jt_down"></span>
            </h4>
            <div class="cont" style="display: block" id="TINYPHP_DEBUG_EXEC_BOX">
<p><span class="font_green">URL: </span>{$request->url}</p>
{if $request->referer}
<p><span class="font_green">Referer: </span>{$request->referer}</p>
{/if}
{if $debugRouterName}
<p><span class="font_green">Router: </span>{$debugRouterName}</p>
<p><span class="font_green">Router Matched URL: </span>{$debugRouterUrl}</p>
<p><span class="font_green">Router Matched Router Params: </span>{eval echo var_export($debugRouterParams, TRUE)}</p>
{/if}
<p><span class="font_green">Controller: </span>{$debugControllerList} </p>
<p><span class="font_green">Action: </span>{$actionName}({$controllerName}->{$actionName}Action)</p>
<p><span class="font_green">Model List: </span>{$debugModelList}
    </div>
        </div>
<!-- EXEC BOX End -->

<!-- SQL Helper Start -->
<div onclick="__TINYPHP_DEBUG.down('TINYPHP_DEBUG_SQL_HELPER')">
    <h4 class="jt">
        <span style="float: left;"> SQL Total Time: <span class="font_red_d"> {$debugDbTimeTotal} </span> second(s), <span class="font_red_d">{$debugDbQueryTotal}</span> querys.
                </span> <span id="TINYPHP_DEBUG_SQL_HELPER_JT" class="jt_down"></span>
            </h4>
            <div id="TINYPHP_DEBUG_SQL_HELPER"  style="display:block" class="cont">
            {loop $debugDbQuerys $query}
            <p > 
                <span style="padding-right:5px">{$query['engine']} : </span>
                <span class="font_green">{$query['sql']}</span>
                <span>Exec Time: </span><span class="font_red">{$query['time']}<span class="font_blue"> s.</span> </span>
           </p>
            {/loop}
            </div>
        </div>   
<!-- SQL Helper End -->        
<!-- VIEW Start -->        
        <div onclick="__TINYPHP_DEBUG.down('TINYPHP_DEBUG_VIEW')">
            <h4 class="jt">
                <span style="float: left">Views</span> <span id="TINYPHP_DEBUG_VIEW_JT" class="jt_down"></span>
            </h4>
            <div class="cont" style="" id="TINYPHP_DEBUG_VIEW">
                <p><span class="font_green">视图变量:&nbsp;</span>${eval echo join(', $', array_keys($debugViewAssign))}</p>

                {loop $debugViewPaths $vpath}
                
                    <p><span class="font_green">[{$vpath[2]}</span>] <span class="font_green">{$vpath[0]}:&nbsp;</span>{$vpath[1]}</p>
                {/loop}
    </div>
        </div>        
<!--  VIEW End -->     
<!-- VAR Start -->
        <div onclick="__TINYPHP_DEBUG.down('TINYPHP_DEBUG_CONST')">
            <h4 class="jt">
                <span style="float: left">Variables</span> <span id="TINYPHP_DEBUG_CONST_JT"
                    class="jt_down"></span>
            </h4>
            <div class="cont" id="TINYPHP_DEBUG_CONST">
            
            <p class="font_yellow_d">以下为未经框架处理的原生数据, 仅供参考, 请勿直接调用\\$_GET,\\$_POST,\\$_COOKIE三个全局数组.应在控制器内，,以$this->get,$this->post,$this->cookie获取.</p>
            <p><b class="font_blue">Const</b></p>
            {loop $debugConstants['user'] $key $const}
            <p>
            {$key} =  {if is_bool($const)}
            <span class="font_blue">&nbsp;{eval echo $const ? 'TRUE' : 'FALSE'}&nbsp;</span>
            {elseif is_int($const)}
            <span class="font_blue">&nbsp;{$const}&nbsp;</span>
            {elseif is_string($const)}
            <span class="font_green">&nbsp;"{$const}"&nbsp;</span>
            {/if}
            </p>
            {/loop}

<p><b class="font_blue" >_GET</b></p>
{loop $debugRequestData['get']  $key $val}
<p>{$key} = <span class="font_green">&nbsp;"{$val}"&nbsp;</span></p>
{/loop}
<p><b class="font_blue" >_POST</b></p>
{loop $debugRequestData['post']  $key $val}
<p>{$key} = <span class="font_green">&nbsp;"{$val}"&nbsp;</span></p>
{/loop}
<p><b class="font_blue" >_COOKIE</b></p>
{loop $debugRequestData['cookie']  $key $val}
<p>{$key} = <span class="font_green">&nbsp;"{$val}"&nbsp;</span></p>
{/loop}
<p><b class="font_blue" >_SESSION</b></p>
{loop $debugRequestData['session']  $key $val}
<p>{$key} = <span class="font_green">&nbsp;"{$val}"&nbsp;</span></p>
{/loop}
<p><b class="font_blue" >_SERVER</b></p>
{loop $debugRequestData['server']  $key $val}
<p>{$key} = <span class="font_green">&nbsp;"{$val}"&nbsp;</span></p>
{/loop}
<p><b class="font_blue" >_argv</b></p>
{loop $debugRequestData['argv']  $key $val}
<p>{$key} = <span class="font_green">&nbsp;"{$val}"&nbsp;</span></p>
{/loop}
    </div>
        </div>
<!-- VAR End -->        
<!-- Include Start -->
        <div >
            <h4 onclick="__TINYPHP_DEBUG.down('TINYPHP_DEBUG_INCLUDE')" class="jt">
                <span style="float: left">Includes</span> <span
                    id="TINYPHP_DEBUG_INCLUDE_JT" class="jt_down"></span>
            </h4>
            <div class="cont" id="TINYPHP_DEBUG_INCLUDE">
<p><b class="font_blue" >loaded extensions</b></p>
<p style="height:auto"><span class="font_green">&nbsp;"{eval echo join('</span>,<span class="font_green">', $debugExts)}"&nbsp; </p>
<p><b class="font_blue" >INCLUDE FILES</b></p>
{eval $debugIncludeFiles = get_included_files()}
{loop $debugIncludeFiles $key $val}
<p>{$key} = <span class="font_green">&nbsp;"{$val}"&nbsp;</span></p>
{/loop}



<p><b class="font_blue" >INCLUDE PATHS</b></p>
{loop $debugIncludePaths $key $val}
<p>INCLUDE_PATH_{$key} = <span class="font_green">&nbsp;"{$val}"&nbsp;</span></p>
{/loop}

    </div>
        </div>
<!-- Include End -->      
<!-- Docs Statr -->
        <div >
            <h4 onclick="__TINYPHP_DEBUG.down('TINYPHP_DEBUG_DOCS')" class="jt">
                <span style="float: left">Docs</span> <span id="TINYPHP_DEBUG_JT" class="jt_up"></span>
            </h4>
            
            <p><a href="javascript:__TINYPHP_DEBUG('TINYPHP_DEBUG_DOCS').src='{$debugDocUrl}';void(0)">Tiny PHP Framework Docs</a></p>
            <iframe id="TINYPHP_DEBUG_DOCS" class="cont" style="display: block"  width="100%"  frameBorder="0" scrolling="no" src="{$debugDocUrl}"> </iframe>

            </div>
<!-- Docs End -->  
</div>        
<script type="text/javascript">

(function(window) {
    var document = window.document;
    var __D = function(id) {
        return document.getElementById(id);
    }
    __D.traversalChildNodes = function (f) {
        if (!f) { return; }
        for (var i in f.childNodes) {
            if (f.childNodes[i].nodeType != 3) {
                __D.traversalChildNodes(f.childNodes[i]);
                continue;
            }
            if (f.childNodes.length == 1) {
                f.innerHTML = __D.highLight(f.childNodes[i].data);
            }
            else if (f.childNodes[i + 1]) {
                    var obj = document.createElement('SPAN');
                    obj.innerHTML = __D.highLight(f.childNodes[i].data);
                    f.insertBefore(obj, f.childNodes[i + 1]);
                    f.childNodes[i].data = '';
            }
            else if (f.childNodes.length == i + 1) {
                    var obj = document.createElement('SPAN');
                    obj.innerHTML = __D.highLight(f.childNodes[i].data);
                    f.appendChild(obj)
                    f.childNodes[i].data = '';
            }
        }
    }    
    __D.traversalChildNodesSql = function(f) {
        if (!f) { return; }
        for (var i in f.childNodes)
        {
            if (f.childNodes[i].nodeType != 3){
                __D.traversalChildNodesSql(f.childNodes[i]);
                continue;
            }
            if (f.childNodes.length == 1) {
                f.innerHTML = __D.highLightSql(f.childNodes[i].data);
            }
            else if (f.childNodes[i + 1]) {
                var obj = document.createElement('SPAN');
                obj.innerHTML = __D.highLightSql(f.childNodes[i].data);
                f.insertBefore(obj, f.childNodes[i + 1]);
                f.childNodes[i].data = '';
            }
            else if (f.childNodes.length == i + 1) {
                var obj = document.createElement('SPAN');
                obj.innerHTML = __D.highLightSql(f.childNodes[i].data);
                f.appendChild(obj)
                f.childNodes[i].data = '';
            }
        }
    }

    __D.highLight = function(string) {
        if (!string) {
            return string;
        }
        string = string.replace(/(('.+')|(".+"))/gm, "<span style=\"color:green\">$1</span>");
        string = string.replace(/(public|var|if|else|elseif|show|array|__construct|static|private|protected|class|throw|show|\->|;|throw|\(|\)|\{|\}|\=>|return|new|\$this|(\:\:)|function|self)/igm, "<span style=\"color:blue\">$1</span>");
        string = string.replace(/(\/\*.*\*\/)/gm, "<span style=\"color:green\">$1</span>");
        string = string.replace(/(\$[A-Za-z]{1}([a-zA-Z0-9]*)?)/gm, "<span style=\"color:#6a0b0b\">$1</span>");
        string = string.replace(/(\s+\d+\s+)/gm, "<span style=\"color:red\">$1</span>");
        string = string.replace(/(\/\/.*)/gm, "<span style=\"color:#aaa\">$1</span>");
        return string;
    }

    __D.highLightSql = function(string) {
        if (!string) {
            return string;
        }
        string = string.replace(/(('.+')|(".+")|(`.+`))/gm, "<span class=\"font_yellow_d\">$1</span>");
        string = string.replace(/(INSERT |SELECT |ORDER |BY | JOIN | FROM | LIMIT | DESC | AND | ON |\(|\))/igm, "<span style=\"color:blue\">$1</span>");
        string = string.replace(/(\s+\d+\s+)/gm, "<span style=\"color:red\">$1</span>");
        return string;
    }

    __D.down = function(id) {
        var B = __D(id);
        var jt = __D(id + '_JT');
        if (B.style.display != 'block') {
            B.isdown = true;
            B.style.display = "block";
            jt.className = 'jt_down';
        } else {
            B.style.display = 'none';
            jt.className = 'jt_up';
        }
    }

    //得到页面长和宽
    __D.getWH = function() {
        var s = arguments[0] || document.getElementsByTag('BODY')[0];
        return { width: Math.max(s.scrollWidth, s.clientWidth), height: Math.max(s.scrollHeight, s.clientHeight)};
    }

    __D.getHeight = function() {
        return __D.getWH(arguments[0]).height;
    }
    
    __D('TINYPHP_DEBUG_DOCS').onload = function() {
       var iframe = this, height = __D.getWH(this.contentWindow.document.body).height;
       this.height = (height + 10)+ 'px';
       this.contentWindow.onbeforeunload = function() {
            iframe.height = 'auto';
       }
    }
        __D.traversalChildNodesSql(__D('TINYPHP_DEBUG_SQL_HELPER'));
        __D.traversalChildNodes(__D('TINYPHP_DEBUG_CODE'));
    window.__TINYPHP_DEBUG = __D;
})(window);
</script>
</body>
</html>